{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addNewMovie","useState","setQuery","hasError","setHasError","setMovie","loading","setLoading","onSubmit","event","preventDefault","getQuery","a","data","film","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","e","target","disabled","classNames","onClick","App","setMovies","newMovie","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56be5a9b.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=11c265e7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addNewMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addNewMovie }) => {\n  const [query, setQuery] = useState('');\n  const [hasError, setHasError] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  const submitMovie = (event: React.FormEvent) => {\n    event.preventDefault();\n    setLoading(true);\n\n    const newAddedMovie = (film: MovieData): Movie => {\n      return {\n        title: film.Title,\n        description: film.Plot,\n        imgUrl: (film.Poster === 'N/A')\n          ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n          : film.Poster,\n        imdbUrl: `https://www.imdb.com/title/${film.imdbID}`,\n        imdbId: film.imdbID,\n      };\n    };\n\n    const getQuery = async () => {\n      try {\n        const data = await getMovie(query);\n\n        if ('imdbID' in data) {\n          setMovie(newAddedMovie(data));\n        } else {\n          setHasError(true);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getQuery();\n  };\n\n  const handleChangeQuery = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.target.value);\n    setHasError(false);\n  };\n\n  const handleAddMovie = () => {\n    if (movie) {\n      addNewMovie(movie);\n      setQuery('');\n      setMovie(null);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={submitMovie}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleChangeQuery}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query}\n              className={\n                classNames('button is-light', { 'is-loading': loading })\n              }\n            >\n              Find a movie\n            </button>\n          </div>\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addNewMovie = (newMovie: Movie) => {\n    if (movies.find(movie => movie.imdbId === newMovie.imdbId)) {\n      return movies;\n    }\n\n    return setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addNewMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}